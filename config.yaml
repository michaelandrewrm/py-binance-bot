# Configuration file with environment-specific settings
# Supports variable interpolation using ${VAR} or ${VAR:default} syntax
# Environment variables and .env files take precedence over these values

# Default configuration (applies to all environments unless overridden)
default:
  app_name: "py-binance-bot"
  version: "1.0.0"
  
  # Database configuration
  database:
    url: "sqlite:///trading_bot.db"
    echo: false
    pool_size: 5
    max_overflow: 10
  
  # Binance exchange configuration
  binance:
    testnet: true
    base_url: null
    rate_limit_requests_per_minute: 1200
    rate_limit_orders_per_second: 10
    # Secrets loaded from environment variables
    api_key: "${BINANCE_API_KEY}"
    api_secret: "${BINANCE_API_SECRET}"
  
  # Logging configuration
  logging:
    level: "INFO"
    file: "trading_bot.log"
    max_file_size_mb: 10
    backup_count: 5
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # Trading strategy configuration
  trading:
    default_symbol: "BTCUSDC"
    default_timeframe: "5m"
    max_position_size: 1000.0
    risk_per_trade: 0.02
    fee_percentage: 0.001
  
  # Grid trading configuration
  grid:
    n_grids: 12
    invest_per_grid: 50.0
    grid_spacing_pct: 0.01
    upper_price: null
    lower_price: null
    rebalance_enabled: true
  
  # AI/ML configuration
  ai:
    enabled: true
    model_type: "lstm"
    n_steps: 60
    epochs: 30
    batch_size: 32
    validation_split: 0.1
    early_stopping_patience: 5
  
  # Cache configuration
  cache:
    dir: "data_cache"
    max_age_hours: 24
    max_size_mb: 500
    enabled: true
  
  # Security configuration (secrets loaded from environment)
  security:
    jwt_secret_key: "${JWT_SECRET_KEY}"
    encryption_key: "${ENCRYPTION_KEY}"
    session_timeout_minutes: 60
  
  # Notification configuration
  notifications:
    telegram_enabled: false
    telegram_bot_token: "${TELEGRAM_BOT_TOKEN}"
    telegram_chat_id: "${TELEGRAM_CHAT_ID}"
    email_enabled: false
    email_smtp_server: null
    email_smtp_port: 587
    email_username: "${EMAIL_USERNAME}"
    email_password: "${EMAIL_PASSWORD}"

# Development environment overrides
dev:
  debug: true
  
  logging:
    level: "DEBUG"
    file: "dev_trading_bot.log"
  
  binance:
    testnet: true
  
  trading:
    max_position_size: 100.0  # Smaller position size for dev
    risk_per_trade: 0.01     # Lower risk for dev
  
  grid:
    n_grids: 5               # Fewer grids for faster testing
    invest_per_grid: 10.0    # Smaller investment for dev
  
  ai:
    epochs: 5               # Faster training for dev
    batch_size: 16          # Smaller batch size

# Staging environment overrides
stage:
  debug: false
  
  logging:
    level: "INFO"
    file: "stage_trading_bot.log"
  
  binance:
    testnet: true           # Still use testnet for staging
  
  database:
    url: "sqlite:///stage_trading_bot.db"
  
  cache:
    max_age_hours: 12       # Shorter cache for more frequent updates

# Production environment overrides
prod:
  debug: false
  
  logging:
    level: "WARNING"
    file: "prod_trading_bot.log"
    max_file_size_mb: 50
    backup_count: 10
  
  binance:
    testnet: false          # Use live trading in production
    rate_limit_requests_per_minute: 1000  # More conservative rate limiting
  
  database:
    url: "${DATABASE_URL:postgresql://user:pass@localhost/trading_bot}"
    pool_size: 10
    max_overflow: 20
  
  trading:
    max_position_size: 5000.0
    risk_per_trade: 0.015
  
  cache:
    max_age_hours: 6        # More frequent cache updates
    max_size_mb: 1000
  
  notifications:
    telegram_enabled: true
    email_enabled: true